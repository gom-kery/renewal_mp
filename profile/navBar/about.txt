Element.classList       
    : DOMTokenList 객체로 element의 class 속성을 보여줌.

    @ Method
     - add(string)          : 지정한 class 추가, 만약 존재한다면 무시.
     - remove(string)       : 지정한 class 삭제
     - contain(string)      : 지정한 class가 존재하는 지 확인
     - replace(old, new)    : old class를 new class 로 대체
     - item(number)         : index value를 활용하여 class value를 return
     - toggle(string)       : class 유무를 확인 후 있으면 add, 없으면 remove를 자동으로 적용

DOMTokenList?               
    : DOM 자료구조 인터페이스의 하위 트리.
    : 공백으로 구분된 문자열로 표현된 데이터를 정렬하여
      토큰 집합으로 만들어 집합을 조작하기 위한 메소드를 제공하는 유사배열 인터페이스.

    * 배열 (array)          : [1,2,3] 과 같이 []로 감싸져있는 데이터
    * 유사배열 (node, els)  : [] 로 감싸져있지만 배열이 아닌 것
    * Array.isArray()로 확인해보면 결과로 구분 가능
        배열    


SVG 파일 (Scalable Vector Graphics) *.svg
    : grid 위에 점과 선을 기반으로 하는 수학공식을 통해 이미지를 저장.
    : https://onlineconvertfree.com/convert-format/png-to-svg/ 와 같은 사이트에서 PNG > svg 파일로 변경 가능.

    SVG 파일의 장점
     - SVG와 같은 벡터 그래픽은 크기에 상관없이 항상 해상도를 유지. 
       SVG 이미지는 특정 브라우저나 다양한 위치에 맞게 크기를 조정해도 품질이 저하되지 않음
     - 기본 SVG 파일은 많은 컬러 픽셀로 생성되는 래스터 이미지보다는 크기가 작습니다.
     - SVG 파일은 텍스트를 디자인이 아닌 텍스트 그대로 처리하기 때문에 
       스크린 리더가 SVG 이미지에 포함된 모든 단어를 스캔할 수 있습니다.
       그래서 웹 페이지를 읽어야 할 때 매우 유용합니다. 검색 엔진은 SVG 이미지 텍스트를 읽고 색인을 달 수도 있습니다.
 

    SVG 파일의 단점
     - SVG 파일은 로고, 일러스트레이션, 차트 등 웹 그래픽에 적합. 
       픽셀이 부족하므로 디테일이 풍부한 사진에는 JPEG 파일이 더 좋음.
     - 최신 브라우저만 SVG를 지원. IE 8과 이전 브라우저에서는 SVG 사용하기 어려움.
     - SVG 이미지에 포함된 코드는 SVG 파일 포맷을 처음 사용하는 경우 이해하기 힘듬. 